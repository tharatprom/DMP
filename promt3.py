import streamlit as st
from PIL import Image, ImageDraw
import requests
from io import BytesIO

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å URL
def load_image(url):
    response = requests.get(url)
    return Image.open(BytesIO(response.content))

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ß‡∏≤‡∏î‡πÅ‡∏Å‡∏ô X ‡πÅ‡∏•‡∏∞ Y ‡∏ö‡∏ô‡∏†‡∏≤‡∏û
def draw_axes(image):
    img = image.copy()
    draw = ImageDraw.Draw(img)
    width, height = img.size

    # ‡∏ß‡∏≤‡∏î‡πÄ‡∏™‡πâ‡∏ô‡πÅ‡∏Å‡∏ô
    draw.line([(0, height//2), (width, height//2)], fill="red", width=2)  # ‡πÅ‡∏Å‡∏ô X
    draw.line([(width//2, 0), (width//2, height)], fill="green", width=2)  # ‡πÅ‡∏Å‡∏ô Y
    return img

# URLs ‡∏Ç‡∏≠‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
image_urls = [
    "https://upload.wikimedia.org/wikipedia/commons/b/bf/Bulldog_inglese.jpg",
    "https://upload.wikimedia.org/wikipedia/commons/thumb/5/56/Bulldog_adult_male.jpg/640px-Bulldog_adult_male.jpg",
    "https://upload.wikimedia.org/wikipedia/commons/thumb/f/f0/English_Bulldog_600.jpg/640px-English_Bulldog_600.jpg"
]

# Session state ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
if "selected_image" not in st.session_state:
    st.session_state.selected_image = None

st.title("üì∑ ‡πÅ‡∏Å‡∏•‡πÄ‡∏•‡∏≠‡∏£‡∏µ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (‡∏û‡∏£‡πâ‡∏≠‡∏° Resize ‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡∏ô X/Y)")

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ñ‡∏ß‡∏†‡∏≤‡∏û 3 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
cols = st.columns(3)
for i in range(3):
    with cols[i]:
        img = load_image(image_urls[i])
        st.image(img, use_column_width=True, caption=f"‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà {i+1}")
        if st.button(f"‡∏î‡∏π‡∏†‡∏≤‡∏û {i+1}"):
            st.session_state.selected_image = i

# ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
if st.session_state.selected_image is not None:
    st.subheader("üîç ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà")

    # Slider ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î
    scale = st.slider("‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î (%)", min_value=10, max_value=200, value=100, step=10)

    # ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏†‡∏≤‡∏û
    img = load_image(image_urls[st.session_state.selected_image])
    new_size = (int(img.width * scale / 100), int(img.height * scale / 100))
    img_resized = img.resize(new_size)

    # ‡∏ß‡∏≤‡∏î‡πÅ‡∏Å‡∏ô X ‡πÅ‡∏•‡∏∞ Y
    img_with_axes = draw_axes(img_resized)

    st.image(img_with_axes, caption=f"‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà {st.session_state.selected_image + 1} ({scale}%)", use_column_width=True)
